knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
# required libraries
library(knitr)
library(pptxtemplates)
library(readxl)
library(tidyverse)
library(sf) # For spatial data manipulation
library(lubridate)
content_dimensions <- pptx_content_dimensions("Reference_document.pptx")
opts_template$set(
full = content_dimensions$full,
left = content_dimensions$left,
right = content_dimensions$right)
Health_data <- read_excel("FCAP Workflow - Bulambuli 2.0 - FCAP Progress - Bulambuli Layering Questionnaire (created 2024-08-12) 2025-03-11 (1).xlsx")
knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
# required libraries
library(knitr)
library(pptxtemplates)
library(readxl)
library(tidyverse)
library(lubridate)
library(dplyr)
library(flextable)
install.packages("flextable")
knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
# required libraries
library(knitr)
library(pptxtemplates)
library(readxl)
library(tidyverse)
library(lubridate)
library(dplyr)
library(flextable)
library(officer)
content_dimensions <- pptx_content_dimensions("Reference_document.pptx")
opts_template$set(
full = content_dimensions$full,
left = content_dimensions$left,
right = content_dimensions$right)
# Importing data
Q1_Health_data <- read_excel("FCAP Workflow - Bulambuli 2.0 - FCAP Progress - Bulambuli Layering Questionnaire (created 2024-08-12) 2025-03-20.xlsx") %>% filter(Year == 2025)
colnames(Q1_Health_data)
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
# required libraries
library(knitr)
library(pptxtemplates)
library(readxl)
library(tidyverse)
library(lubridate)
library(dplyr)
library(flextable)
library(officer)
content_dimensions <- pptx_content_dimensions("Reference_document.pptx")
opts_template$set(
full = content_dimensions$full,
left = content_dimensions$left,
right = content_dimensions$right)
# Importing data
Q1_Health_data <- read_excel("FCAP Workflow - Bulambuli 2.0 - FCAP Progress - Bulambuli Layering Questionnaire (created 2024-08-12) 2025-03-20.xlsx") %>% filter(Year == 2025)
colnames(Q1_Health_data)
summary_table <- Q1_Health_data %>%
group_by(subcounty) %>%
summarise(
surveyed_households = sum(Households_surveyed, na.rm = TRUE),
total_households = sum(HH_Size, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(
percent_surveyed = round((Households_surveyed / HH_Size) * 100, 1)
) %>%
select(Subcounty, Households_surveyed, HH_Size)
summary_table <- Q1_Health_data %>%
group_by(Subcounty) %>%
summarise(
surveyed_households = sum(Households_surveyed, na.rm = TRUE),
total_households = sum(HH_Size, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(
percent_surveyed = round((Households_surveyed / HH_Size) * 100, 1)
) %>%
select(Subcounty, Households_surveyed, HH_Size)
summary_table <- Q1_Health_data %>%
group_by(Subcounty) %>%
summarise(
surveyed_households = sum(Households_surveyed, na.rm = TRUE),
total_households = sum(HH_Size, na.rm = TRUE)
) %>%
mutate(
percent_surveyed = round((Households_surveyed / HH_Size) * 100, 1)
) %>%
select(Subcounty, Households_surveyed, HH_Size)
Q1_Health_data$Households_surveyed <- as.character(Q1_Health_data$Households_surveyed)
Q1_Health_data$HH_Size <- as.character(Q1_Health_data$HH_Size)
summary_table <- Q1_Health_data %>%
group_by(Subcounty) %>%
summarise(
surveyed_households = sum(Households_surveyed, na.rm = TRUE),
total_households = sum(HH_Size, na.rm = TRUE)
) %>%
mutate(
percent_surveyed = round((Households_surveyed / HH_Size) * 100, 1)
) %>%
select(Subcounty, Households_surveyed, HH_Size)
Q1_Health_data$Households_surveyed <- as.numeric(Q1_Health_data$Households_surveyed)
Q1_Health_data$HH_Size <- as.numeric(Q1_Health_data$HH_Size)
summary_table <- Q1_Health_data %>%
group_by(Subcounty) %>%
summarise(
surveyed_households = sum(Households_surveyed, na.rm = TRUE),
total_households = sum(HH_Size, na.rm = TRUE)
) %>%
mutate(
percent_surveyed = round((Households_surveyed / HH_Size) * 100, 1)
) %>%
select(Subcounty, Households_surveyed, HH_Size)
summary_table <- Q1_Health_data %>%
group_by(Subcounty) %>%
summarise(
surveyed_households = sum(Households_surveyed, na.rm = TRUE),
total_households = sum(HH_Size, na.rm = TRUE)
) %>%
mutate(
percent_surveyed = round((surveyed_households / total_households) * 100, 1)
) %>%
select(Subcounty, surveyed_households, total_households)
# Convert to flextable
ft <- flextable(summary_table) %>%
set_header_labels(
subcounty = "Subcounty",
surveyed_households = "Surveyed Households",
percent_surveyed = "Percent Surveyed (%)"
) %>%
autofit()
View(summary_table)
View(ft)
View(ft)
Indicator_defination <- read_excel("FCAP Workflow - Bulambuli 2.0 - FCAP Progress - Bulambuli Layering Questionnaire (created 2024-08-12) 2025-03-20.xlsx",
sheet = "Indicator Defination")
knitr::kable(Indicator_defination, align = 'l')
View(Indicator_defination)
Q1_Health_data$Functional_Latrine <- as.numeric(Q1_Health_data$Functional_Latrine)
Q1_Health_data$Functional_Hand_Washing_Facility <- as.numeric(Q1_Health_data$Functional_Hand_Washing_Facility)
Q1_Health_data$Functional_Dish_drying_rack <- as.numeric(Q1_Health_data$Functional_Dish_drying_rack)
Indicator_Performance <- Q1_Health_data %>%
mutate(
Functional_Latrine_Coverage = ((Functional_Latrine / Households_surveyed) * 100),
Hand_Washing_Facility_Coverage = ((Functional_Hand_Washing_Facility / Households_surveyed) * 100),
Functional_Dish_Drying_Rack = ((Functional_Dish_drying_rack / Households_surveyed) * 100)))
Indicator_Performance <- Q1_Health_data %>%
mutate(
Functional_Latrine_Coverage = ((Functional_Latrine / Households_surveyed) * 100),
Hand_Washing_Facility_Coverage = ((Functional_Hand_Washing_Facility / Households_surveyed) * 100),
Functional_Dish_Drying_Rack = ((Functional_Dish_drying_rack / Households_surveyed) * 100))
View(Health_data)
View(Q1_Health_data)
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
# required libraries
library(knitr)
library(pptxtemplates)
library(readxl)
library(tidyverse)
library(lubridate)
library(dplyr)
library(flextable)
library(officer)
content_dimensions <- pptx_content_dimensions("Reference_document.pptx")
opts_template$set(
full = content_dimensions$full,
left = content_dimensions$left,
right = content_dimensions$right)
# Importing data
Q1_Health_data <- read_excel("FCAP Workflow - Bulambuli 2.0 - FCAP Progress - Bulambuli Layering Questionnaire (created 2024-08-12) 2025-03-20.xlsx") %>% filter(Year == 2025)
colnames(Q1_Health_data)
# Chunk 2
Q1_Health_data$Households_surveyed <- as.numeric(Q1_Health_data$Households_surveyed)
Q1_Health_data$HH_Size <- as.numeric(Q1_Health_data$HH_Size)
summary_table <- Q1_Health_data %>%
group_by(Subcounty) %>%
summarise(
surveyed_households = sum(Households_surveyed, na.rm = TRUE),
total_households = sum(HH_Size, na.rm = TRUE)
) %>%
mutate(
percent_surveyed = round((surveyed_households / total_households) * 100, 1)
) %>%
select(Subcounty, surveyed_households, total_households)
knitr::kable(summary_table , align = 'l')
# Chunk 3
Indicator_defination <- read_excel("FCAP Workflow - Bulambuli 2.0 - FCAP Progress - Bulambuli Layering Questionnaire (created 2024-08-12) 2025-03-20.xlsx",
sheet = "Indicator Defination")
knitr::kable(Indicator_defination, align = 'l')
Q1_Health_data$Functional_Latrine <- as.numeric(Q1_Health_data$Functional_Latrine)
Q1_Health_data$Functional_Hand_Washing_Facility <- as.numeric(Q1_Health_data$Functional_Hand_Washing_Facility)
Q1_Health_data$Functional_Dish_drying_rack <- as.numeric(Q1_Health_data$Functional_Dish_drying_rack)
Indicator_Performance <- Q1_Health_data %>%
mutate(
Percent_Functional_Latrine_Coverage = ((Functional_Latrine / Households_surveyed) * 100),
Percent_Hand_Washing_Facility_Coverage = ((Functional_Hand_Washing_Facility / Households_surveyed) * 100),
Percent_Functional_Dish_Drying_Rack = ((Functional_Dish_drying_rack / Households_surveyed) * 100))
select(Subcounty, surveyed_households, total_households)
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
# required libraries
library(knitr)
library(pptxtemplates)
library(readxl)
library(tidyverse)
library(lubridate)
library(dplyr)
library(flextable)
library(officer)
content_dimensions <- pptx_content_dimensions("Reference_document.pptx")
opts_template$set(
full = content_dimensions$full,
left = content_dimensions$left,
right = content_dimensions$right)
# Importing data
Q1_Health_data <- read_excel("FCAP Workflow - Bulambuli 2.0 - FCAP Progress - Bulambuli Layering Questionnaire (created 2024-08-12) 2025-03-20.xlsx") %>% filter(Year == 2025)
colnames(Q1_Health_data)
# Chunk 2
Q1_Health_data$Households_surveyed <- as.numeric(Q1_Health_data$Households_surveyed)
Q1_Health_data$HH_Size <- as.numeric(Q1_Health_data$HH_Size)
summary_table <- Q1_Health_data %>%
group_by(Subcounty) %>%
summarise(
surveyed_households = sum(Households_surveyed, na.rm = TRUE),
total_households = sum(HH_Size, na.rm = TRUE)
) %>%
mutate(
percent_surveyed = round((surveyed_households / total_households) * 100, 1)
) %>%
select(Subcounty, surveyed_households, total_households)
knitr::kable(summary_table , align = 'l')
# Chunk 3
Indicator_defination <- read_excel("FCAP Workflow - Bulambuli 2.0 - FCAP Progress - Bulambuli Layering Questionnaire (created 2024-08-12) 2025-03-20.xlsx",
sheet = "Indicator Defination")
knitr::kable(Indicator_defination, align = 'l')
Q1_Health_data$Functional_Latrine <- as.numeric(Q1_Health_data$Functional_Latrine)
Q1_Health_data$Functional_Hand_Washing_Facility <- as.numeric(Q1_Health_data$Functional_Hand_Washing_Facility)
Q1_Health_data$Functional_Dish_drying_rack <- as.numeric(Q1_Health_data$Functional_Dish_drying_rack)
Indicator_Performance <- Q1_Health_data %>%
mutate(
Percent_Functional_Latrine_Coverage = ((Functional_Latrine / Households_surveyed) * 100),
Percent_Hand_Washing_Facility_Coverage = ((Functional_Hand_Washing_Facility / Households_surveyed) * 100),
Percent_Functional_Dish_Drying_Rack = ((Functional_Dish_drying_rack / Households_surveyed) * 100))
select(Subcounty, surveyed_households, total_households)
View(Indicator_Performance)
Indicator_table <- Q1_Health_data %>%
select(Percent_Functional_Latrine_Coverage, Percent_Hand_Washing_Facility_Coverage, Percent_Functional_Dish_Drying_Rack) %>%
summarize(Q1_Latrine_Coverage  = mean(Percent_Functional_Latrine_Coverage),
Q1_Hand_Washing_Fac = mean(Percent_Hand_Washing_Facility_Coverage),
Q1_Drying_Rack = mean(Percent_Functional_Dish_Drying_Rack))
Q1_Health_data <- Q1_Health_data %>%
mutate(
Percent_Functional_Latrine_Coverage = ((Functional_Latrine / Households_surveyed) * 100),
Percent_Hand_Washing_Facility_Coverage = ((Functional_Hand_Washing_Facility / Households_surveyed) * 100),
Percent_Functional_Dish_Drying_Rack = ((Functional_Dish_drying_rack / Households_surveyed) * 100))
Indicator_table <- Q1_Health_data %>%
select(Percent_Functional_Latrine_Coverage, Percent_Hand_Washing_Facility_Coverage, Percent_Functional_Dish_Drying_Rack) %>%
summarize(Q1_Latrine_Coverage  = mean(Percent_Functional_Latrine_Coverage),
Q1_Hand_Washing_Fac = mean(Percent_Hand_Washing_Facility_Coverage),
Q1_Drying_Rack = mean(Percent_Functional_Dish_Drying_Rack))
Q1_Health_data <- Q1_Health_data %>%
mutate(
Percent_Functional_Latrine_Coverage = ((Functional_Latrine / Households_surveyed) * 100),
Percent_Hand_Washing_Facility_Coverage = ((Functional_Hand_Washing_Facility / Households_surveyed) * 100),
Percent_Functional_Dish_Drying_Rack = ((Functional_Dish_drying_rack / Households_surveyed) * 100)) %>%
summarize(Q1_Latrine_Coverage  = mean(Percent_Functional_Latrine_Coverage),
Q1_Hand_Washing_Fac = mean(Percent_Hand_Washing_Facility_Coverage),
Q1_Drying_Rack = mean(Percent_Functional_Dish_Drying_Rack))
Q1_Indicator_Performance <- Q1_Health_data %>%
mutate(
Percent_Functional_Latrine_Coverage = ((Functional_Latrine / Households_surveyed) * 100),
Percent_Hand_Washing_Facility_Coverage = ((Functional_Hand_Washing_Facility / Households_surveyed) * 100),
Percent_Functional_Dish_Drying_Rack = ((Functional_Dish_drying_rack / Households_surveyed) * 100)) %>%
summarize(Q1_Latrine_Coverage  = mean(Percent_Functional_Latrine_Coverage),
Q1_Hand_Washing_Fac = mean(Percent_Hand_Washing_Facility_Coverage),
Q1_Drying_Rack = mean(Percent_Functional_Dish_Drying_Rack))
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
# required libraries
library(knitr)
library(pptxtemplates)
library(readxl)
library(tidyverse)
library(lubridate)
library(dplyr)
library(flextable)
library(officer)
content_dimensions <- pptx_content_dimensions("Reference_document.pptx")
opts_template$set(
full = content_dimensions$full,
left = content_dimensions$left,
right = content_dimensions$right)
# Importing data
Q1_Health_data <- read_excel("FCAP Workflow - Bulambuli 2.0 - FCAP Progress - Bulambuli Layering Questionnaire (created 2024-08-12) 2025-03-20.xlsx") %>% filter(Year == 2025)
colnames(Q1_Health_data)
# Chunk 2
Q1_Health_data$Households_surveyed <- as.numeric(Q1_Health_data$Households_surveyed)
Q1_Health_data$HH_Size <- as.numeric(Q1_Health_data$HH_Size)
summary_table <- Q1_Health_data %>%
group_by(Subcounty) %>%
summarise(
surveyed_households = sum(Households_surveyed, na.rm = TRUE),
total_households = sum(HH_Size, na.rm = TRUE)
) %>%
mutate(
percent_surveyed = round((surveyed_households / total_households) * 100, 1)
) %>%
select(Subcounty, surveyed_households, total_households)
knitr::kable(summary_table , align = 'l')
# Chunk 3
Indicator_defination <- read_excel("FCAP Workflow - Bulambuli 2.0 - FCAP Progress - Bulambuli Layering Questionnaire (created 2024-08-12) 2025-03-20.xlsx",
sheet = "Indicator Defination")
knitr::kable(Indicator_defination, align = 'l')
Q1_Health_data$Functional_Latrine <- as.numeric(Q1_Health_data$Functional_Latrine)
Q1_Health_data$Functional_Hand_Washing_Facility <- as.numeric(Q1_Health_data$Functional_Hand_Washing_Facility)
Q1_Health_data$Functional_Dish_drying_rack <- as.numeric(Q1_Health_data$Functional_Dish_drying_rack)
Q1_Indicator_Performance <- Q1_Health_data %>%
mutate(
Percent_Functional_Latrine_Coverage = ((Functional_Latrine / Households_surveyed) * 100),
Percent_Hand_Washing_Facility_Coverage = ((Functional_Hand_Washing_Facility / Households_surveyed) * 100),
Percent_Functional_Dish_Drying_Rack = ((Functional_Dish_drying_rack / Households_surveyed) * 100)) %>%
summarize(Q1_Latrine_Coverage  = mean(Percent_Functional_Latrine_Coverage),
Q1_Hand_Washing_Fac = mean(Percent_Hand_Washing_Facility_Coverage),
Q1_Drying_Rack = mean(Percent_Functional_Dish_Drying_Rack))
knitr::kable(Q1_Indicator_Performance , align = 'l')
View(Q1_Indicator_Performance)
Ind_Performance <- read_excel("FCAP Workflow - Bulambuli 2.0 - FCAP Progress - Bulambuli Layering Questionnaire (created 2024-08-12) 2025-03-20.xlsx",
sheet = "Comparison Q1-25 and Q2-24 ")
Ind_Performance[] <- lapply(Ind_Performance, function(x) {
if (is.numeric(x)) {
return(scales::percent(x))
} else {
return(x)
}
})
knitr::kable(Ind_Performance, align = 'l')
